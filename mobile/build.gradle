apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.0"

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE']=code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "me.oviedo.wearfps"
            versionCode code
            versionName project.VERSION_NAME+" (" + code + ")"
            minSdkVersion 19
            targetSdkVersion 23
        }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    /*defaultConfig {
        applicationId "me.oviedo.wearfps"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
    }*/
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                if (variant.buildType.name == "release") appendVersionName(variant, defaultConfig)
            }
        }
    }

    dataBinding {
        enabled = false
    }
}

def appendVersionName(variant, defaultConfig) {
    variant.outputs.each { output ->
        if (output.zipAlign) {
            def file = output.outputFile
            def fileName = file.name.replace(".apk", "-" + defaultConfig.versionCode  + ".apk")
            output.outputFile = new File(file.parent, fileName)
        }

        def file = output.packageApplication.outputFile
        def fileName = file.name.replace(".apk", "-" + defaultConfig.versionCode  + ".apk")
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    wearApp project(':wear')
    testCompile 'junit:junit:4.12'
    //compile 'com.android.support:appcompat-v7:23.1.1'
    // No necesitamos todos los servicios enteritos de google play
    //compile 'com.google.android.gms:play-services:8.4.0'
    //compile 'com.android.support:support-v4:23.1.1'
    compile 'com.google.android.gms:play-services-wearable:9.0.2'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.google.code.gson:gson:2.7'
}
